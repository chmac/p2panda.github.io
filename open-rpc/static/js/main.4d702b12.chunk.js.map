{"version":3,"sources":["themes/openrpcTheme.ts","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","MuiPaper","root","zIndex","opacity","MuiToolbar","background","backgroundColor","colorDefault","colorPrimary","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","theme","process","REACT_APP_THEME","reactJsonOptions","parseOpenRPCDocument","schema","then","rpcSchema","document","title","info","ReactDOM","render","CssBaseline","getElementById","catch","error","console","log"],"mappings":"s+jBAGaA,EAAaC,YAAe,CACvCC,MAAO,CACLC,UAAW,CACTC,SAAU,UAEZC,QAAS,CACPC,UAAW,IAGfC,UAAW,CACTC,SAAU,CACRC,KAAM,CACJC,OAAQ,EACRC,QAAS,IAGbC,WAAY,CACVH,KAAM,CACJI,WAAY,2BAGhBV,UAAW,CACTM,KAAM,CACJK,gBAAiB,0BAEnBC,aAAc,CACZF,WAAY,0BAEdG,aAAc,CACZH,WAAY,4BAIlBI,QAAS,CACPJ,WAAY,CACVK,QAAS,WAKFC,EAAYlB,YAAe,CACtCC,MAAO,CACLC,UAAW,CACTC,SAAU,WAGda,QAAS,CACPG,KAAM,OACNP,WAAY,CACVK,QAASG,IAAK,KACdC,MAAOD,IAAK,OAGhBd,UAAW,CACTC,SAAU,CACRC,KAAM,CACJC,OAAQ,EACRC,QAAS,IAGbR,UAAW,CACTM,KAAM,CACJI,WAAY,0BAEdG,aAAc,CACZH,WAAY,2BAGhBD,WAAY,CACVH,KAAM,CACJI,WAAY,2BAGhBU,SAAU,CACRd,KAAM,CACJI,WAAY,2BAGhBW,cAAe,CACbf,KAAM,CACJgB,MAAOJ,IAAK,UCxEdK,EAAwC,SAAhCC,mHAAYC,gBAA6BT,EAAYnB,EAE7D6B,EAAmB,CACrBH,MAAuC,SAAhCC,mHAAYC,gBAA6B,cAAgB,wBAGpEE,+BAAqBC,GAAmBC,MAAK,SAAAC,GACzCC,SAASC,MAAQF,EAAUG,KAAKD,MAChCE,IAASC,OACL,kBAAC,IAAD,CAAkBZ,MAAOA,GACrB,kBAACa,EAAA,EAAD,MACA,kBAAC,IAAD,CAAeR,OAAQE,EAAWJ,iBAAkBA,KAEtDK,SAASM,eAAe,YAC/BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q","file":"static/js/main.4d702b12.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        zIndex: 1,\n        opacity: 1,\n      },\n    },\n    MuiToolbar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiAppBar: {\n      root: {\n        backgroundColor: \"transparent !important\",\n      },\n      colorDefault: {\n        background: \"transparent !important\",\n      },\n      colorPrimary: {\n        background: \"transparent !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[900],\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        zIndex: 1,\n        opacity: 1,\n      },\n    },\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n      colorPrimary: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiToolbar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Documentation from \"@open-rpc/docs-react\";\nimport {parseOpenRPCDocument} from \"@open-rpc/schema-utils-js/build/src/index-web\";\nimport schema from './schema/openrpc.json';\nimport {OpenrpcDocument as OpenRPC} from \"@open-rpc/meta-schema/build/src\";\nimport {MuiThemeProvider} from \"@material-ui/core/styles\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport {darkTheme, lightTheme} from \"./themes/openrpcTheme\";\n\n\nconst theme = process.env.REACT_APP_THEME === \"dark\" ? darkTheme : lightTheme;\n\nconst reactJsonOptions = {\n    theme: process.env.REACT_APP_THEME === \"dark\" ? \"summerfruit\" : \"summerfruit:inverted\"\n};\n\nparseOpenRPCDocument(schema as OpenRPC).then(rpcSchema => {\n    document.title = rpcSchema.info.title;\n    ReactDOM.render(\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Documentation schema={rpcSchema} reactJsonOptions={reactJsonOptions} />\n        </MuiThemeProvider>\n        , document.getElementById(\"root\"));\n}).catch(error => {\n    console.log(error);\n});\n\n\n"],"sourceRoot":""}